name: Run Tests

on:
  repository_dispatch:
    types: [run-tests]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: hexo-site
        path: public
        github-token: ${{secrets.GITHUB_TOKEN}}
        repository: yumis56/project-repo
        run-id: ${{ github.event.client_payload.run_id }}
    - name: Run Playwright tests
      run: |
        docker build -t playwright-tests .
        docker run --network host -v $PWD/public:/app/public playwright-tests
    - name: Check test results
      id: test_result
      run: |
        if [ $? -eq 0 ]; then
          echo "Tests passed"
          echo "status=success" >> $GITHUB_OUTPUT
        else
          echo "Tests failed"
          echo "status=failure" >> $GITHUB_OUTPUT
        fi

  deploy:
    needs: test
    if: needs.test.outputs.status == 'success'
    runs-on: ubuntu-latest
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: hexo-site
        path: public
        github-token: ${{secrets.GITHUB_TOKEN}}
        repository: yumis56/project-repo
        run-id: ${{ github.event.client_payload.run_id }}
    - name: Deploy to production
      env:
        DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
      run: |
        # Add deployment script here
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git clone --single-branch --branch gh-pages https://github.com/yumis56/project-repo.git deploy
        cd deploy
        rm -rf *
        cp -r ../public/* .
        git add .
        git commit -m "Deploy website" || echo "No changes to commit"
        git push https://${GITHUB_ACTOR}:${DEPLOY_KEY}@github.com/yumis56/project-repo.git gh-pages
